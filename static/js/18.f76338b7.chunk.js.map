{"version":3,"sources":["components/Button/Button.js","utils/DeriNumberFormat.js","components/Pool/PoolBox.js","hooks/useMiningPool.js","mobile/components/Mining/Pool.js"],"names":["Button","btnText","className","disabled","click","afterClick","checkApprove","wallet","spec","lang","useState","status","setStatus","isApproved","setIsApproved","pending","setPending","buttonText","setbuttonText","loadRef","useRef","onClick","a","beforeAction","afterAction","current","style","display","loadApproveStatus","detail","account","pool","bTokenId","res","approve","success","alert","useEffect","ref","marginRight","DeriNumberFormat","props","renderablity","setRenderablity","allowZero","others","undefined","value","isNaN","Math","abs","displayType","chainConfig","config","DeriEnv","get","Card","card","index","list","buttonElement","setButtonElement","history","useHistory","connectWallet","connect","claimAirdrop","getUserInfoAllForAirDrop","info","valid","eqInNumber","chainId","mintAirdrop","airdrop","isConnected","url","version","type","symbol","bTokenSymbol","address","symbolId","indexOf","push","gotoMining","liquidity","thousandSeparator","decimalScale","lpApy","title","apy","suffix","label","length","inject","observer","group","poolClass","classNames","network","toUpperCase","target","rel","href","formatAdd","map","env","chainInfo","useMiningPool","isNew","loaded","setLoaded","pools","setPools","v1Pools","setV1Pools","v2Pools","setV2Pools","mapConfig","getPoolLiquidity","liqPool","getPoolInfoApy","apyPool","Object","assign","name","toFixed","formatAddress","groupByNetwork","all","reduce","total","find","item","poolInfo","configs","getContractAddressConfig","pos","findIndex","slpConfig","getLpContractAddressConfig","liqInfo","isLP","getLpPoolInfoApy","lapy","apy2","isSushiLP","isCakeLP","allConfigs","concat","Promise","then","filter","p","console","log"],"mappings":"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","file":"static/js/18.f76338b7.chunk.js","sourcesContent":["import {useState,useRef,useEffect} from 'react';\r\nexport default function Button({btnText,className,disabled,click,afterClick,checkApprove,wallet,spec,lang}){\r\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\r\n  const [isApproved, setIsApproved] = useState(true);\r\n  const [pending, setPending] = useState(false);\r\n  const [buttonText, setbuttonText] = useState(btnText)\r\n  const loadRef = useRef(null)\r\n\r\n  const onClick = async () => {\r\n    if(status !== 'enabled') {\r\n      return ;\r\n    }\r\n    beforeAction()\r\n    const result = await click();    \r\n    if(result){\r\n      afterClick && afterClick()\r\n    } \r\n    afterAction()\r\n  }\r\n\r\n  const beforeAction = ()  => {\r\n    setStatus('disabled')\r\n    setPending(true);\r\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\r\n  }\r\n\r\n  const afterAction = () => {\r\n    loadRef.current && (loadRef.current.style.display = 'none')\r\n    setStatus('enabled')\r\n    setPending(false);\r\n  }\r\n\r\n  const loadApproveStatus = async () => {\r\n    if(checkApprove && wallet && wallet.detail.account){\r\n      const res = await wallet.isApproved(spec.pool,spec.bTokenId)\r\n      setIsApproved(res);\r\n    }\r\n  }\r\n  const approve = async () => {\r\n    beforeAction();\r\n    const res = await wallet.approve(spec.pool,spec.bTokenId);\r\n    if(res.success){\r\n      setIsApproved(true);\r\n    } else {\r\n      setIsApproved(false)\r\n      alert(lang['approve-failed'])\r\n    }\r\n    afterAction();\r\n  }\r\n\r\n  const action = () => {\r\n    if(isApproved){\r\n      onClick();\r\n    } else {\r\n      approve();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadApproveStatus();\r\n    return () => {};\r\n  }, [wallet,spec,checkApprove]);\r\n\r\n  useEffect(() => {\r\n    if(btnText){\r\n      setbuttonText(btnText)\r\n    }\r\n    return () => {\r\n    }\r\n  }, [btnText])\r\n\r\n  return(\r\n    <button className={className} onClick={action} >\r\n        <span className='btn-loading-wrap'>\r\n          <span ref={loadRef}\r\n            className='spinner spinner-border spinner-border-sm'\r\n            style={{display : 'none' ,marginRight : '2'}}>\r\n          </span>\r\n        </span>\r\n          {pending ? lang['pending'] : (isApproved ? buttonText : lang['approve'])  }\r\n        </button>\r\n  )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nexport default function DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState('--');\r\n\r\n  useEffect(() => {\r\n    const {allowZero,...others} = props \r\n    if(((props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\r\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\r\n    } \r\n    return () => {};\r\n  }, [props.value]);\r\n\r\n  return renderablity;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport config from  '../../config.json'\r\nimport { DeriEnv, getUserInfoAllForAirDrop, connectWallet, mintAirdrop, isUnlocked, unlock } from '../../lib/web3js/indexV2';\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat';\r\nimport { inject, observer } from 'mobx-react';\r\nimport Button from '../Button/Button.js';\r\nimport { eqInNumber, addParam } from '../../utils/utils.js';\r\nimport classNames from 'classnames';\r\nconst chainConfig = config[DeriEnv.get()]['chainInfo'];\r\n\r\nfunction PoolBox({wallet,group = {},lang}){\r\n  const {pool,list} = group\r\n\r\n  \r\n\r\n  const poolClass = classNames('pool',{\r\n    'only-one' : list.length === 1 ,\r\n    'full' : list.length === 5\r\n  })\r\n\r\n  return(\r\n    <div className={poolClass} >\r\n      <div className=\"pool-header\">\r\n        <div className='left'>\r\n          <div className=\"network\">\r\n            {pool.network && pool.network.toUpperCase()}\r\n          </div>\r\n          <div className='pool-desc'>\r\n            <span className='symbol'>\r\n                <span className='symbol-label'>{lang['symbol']}:</span>\r\n                <span>{pool.symbol}</span>  \r\n            </span>\r\n            <span className='address'>\r\n              <span className='address-label'>{lang['address']}:</span>\r\n                {!pool.airdrop ? <a target='_blank' rel='noreferrer' href={`${chainConfig[pool.chainId] && chainConfig[pool.chainId]['viewUrl']}/address/${pool.address}`}> \r\n                  {pool.formatAdd}\r\n                </a> : '--'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='version'>{pool.version}</div>\r\n      </div>\r\n      <div className=\"pool-info\">\r\n        {list.map((card,index) => <Card card={card} index={index} pool={pool} list={list} wallet={wallet} lang={lang}/>)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Card({wallet,pool,card,index,list,lang}) {\r\n  const [buttonElement, setButtonElement] = useState('');\r\n  const history = useHistory();\r\n  const gotoMining = url => {\r\n    history.push(url)\r\n  }\r\n  const connectWallet = () => {\r\n    wallet.connect()\r\n  }\r\n  const claimAirdrop = async () =>{\r\n    let info =  await getUserInfoAllForAirDrop(wallet.detail.account)\r\n    if(!info.valid){\r\n      alert(lang['no-deri-to-claim']);\r\n      return;\r\n    }\r\n    if(!eqInNumber(wallet.detail.chainId,info.chainId)){\r\n      alert(lang['please-switch-to-BSC-to-claim-deri'])\r\n      return;\r\n    }\r\n    let res = await mintAirdrop(info.chainId,wallet.detail.account)\r\n    if(!res.success){\r\n      alert(lang['claim-failed'])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(pool && pool.airdrop){\r\n      if(!wallet.isConnected()) {\r\n        setButtonElement(<Button btnText={lang['connect-wallet']} click={connectWallet} lang={lang}></Button>)\r\n      } else {\r\n        setButtonElement(<Button btnText={lang['claim']} click={claimAirdrop} lang={lang}></Button>)\r\n      }\r\n    } else {\r\n      let url = `/mining/${pool.version || 'v1'}/${pool.chainId}/${card.type}/${card.symbol}/${card.bTokenSymbol}/${pool.address}`\r\n      if(card.bTokenId){\r\n        url = `${url}?baseTokenId=${card.bTokenId}`\r\n      }\r\n      if(card.symbolId){\r\n        if(url.indexOf('?') > 0){\r\n          url = `${url}&symbolId=${card.symbolId}`\r\n        } else {\r\n          url = `${url}?symbolId=${card.symbolId}`\r\n        }\r\n      }\r\n      setButtonElement(        \r\n          <button onClick={() => gotoMining(url)}>\r\n            {lang['staking']}\r\n          </button>\r\n        )\r\n    }    \r\n    return () => {};\r\n  }, [wallet.detail.chainId]);\r\n  return (\r\n    <>\r\n      <div className=\"info\">\r\n        <div className=\"top-info\">\r\n          <div className='pool-top'>\r\n            <span className={`logo ${card.bTokenSymbol}`} ></span>\r\n            <span className=\"base-token\">{card.bTokenSymbol}</span>\r\n          </div>\r\n          <div className=\"pool-detail\">\r\n            <div>\r\n              <span className='title'>{card.airdrop ? lang['total'] : lang['pool-liq']}</span>\r\n              <DeriNumberFormat value={card.liquidity} displayType='text' thousandSeparator={true} decimalScale={card.lpApy ? 7 : 0}/>\r\n            </div>\r\n            <div className=\"apy\">\r\n              <span>{lang['apy']}</span>\r\n              <span>\r\n                <span className={card.lpApy ? 'sushi-apy-underline' : ''} title={ card.lpApy && lang['deri-apy']}>\r\n                  {card.apy ? <DeriNumberFormat value={card.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2}/> : '--'}                 \r\n                </span>\r\n                {card.lpApy &&<>\r\n                <span> + </span>\r\n                <span className={card.lpApy ? 'sushi-apy-underline' : '' } title={ card.lpApy && card.label}> <DeriNumberFormat value={card.lpApy} displayType='text' suffix='%' decimalScale={2}/></span>\r\n                </>}\r\n              </span>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"bottom-btn\">\r\n        {buttonElement}\r\n      </div>\r\n    </div>\r\n    {index !== list.length-1 && <div className='top-line'></div>}\r\n  </>)\r\n}\r\nexport default  inject('wallet','version')(observer(PoolBox))","import {useState,useEffect} from 'react';\r\nimport {\r\n  DeriEnv,\r\n  getContractAddressConfig,\r\n  getPoolLiquidity,\r\n  getPoolInfoApy,\r\n  getLpContractAddressConfig,\r\n  getLpPoolInfoApy\r\n} from '../lib/web3js/indexV2'\r\nimport config from '../config.json'\r\nimport { formatAddress, isLP,isSushiLP,isCakeLP, eqInNumber } from '../utils/utils';\r\n\r\nconst env = DeriEnv.get();\r\nconst {chainInfo} = config[env]\r\n\r\nexport default function useMiningPool(isNew){\r\n  const [loaded,setLoaded] = useState(false)\r\n  const [pools, setPools] = useState([])\r\n  const [v1Pools, setV1Pools] = useState([])    \r\n  const [v2Pools, setV2Pools] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    const mapConfig = async (config) => {\r\n      const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\r\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\r\n      const pool = config.pool || ''\r\n      return Object.assign(config,{ \r\n        network : chainInfo[config.chainId].name,\r\n        liquidity : liqPool.liquidity,\r\n        apy :  ((+apyPool.apy) * 100).toFixed(2),\r\n        formatAdd : formatAddress(pool),\r\n        address : pool,\r\n        type : 'perpetual',\r\n        buttonText : 'STAKING'        \r\n      })\r\n    }\r\n    const groupByNetwork = pools => {\r\n      const all = []\r\n      pools.reduce((total,pool) => {\r\n        const find = total.find(item => eqInNumber(item['pool']['address'],pool['address']))\r\n        if(find && find.list.length < 5){\r\n          find['list'].push(pool)\r\n        } else {\r\n          const poolInfo = {\r\n            pool : {\r\n              network : pool.network,\r\n              symbol : pool.symbol,\r\n              address : pool.address,\r\n              formatAdd : pool.formatAdd,\r\n              version : pool.version,\r\n              chainId : pool.chainId,\r\n              airdrop : pool.airdrop,\r\n              type : pool.type,\r\n              bTokenSymbol : pool.bTokenSymbol,\r\n              bTokenId : pool.bTokenId,\r\n              symbolId : pool.symbolId\r\n            },\r\n            list : [pool]\r\n          }\r\n          total.push(poolInfo)\r\n        }\r\n        return total;\r\n      },all)\r\n      return all;\r\n    }\r\n    let configs = getContractAddressConfig(env,'v2');\r\n    // let v1Configs = getContractAddressConfig(env,'v1')\r\n\r\n    const all = []\r\n    configs = configs.reduce((total,config) => {\r\n      const pos = total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol && config.version === item.version)\r\n      if(config.version === 'v2' && pos > -1 && total[pos].symbol.indexOf(config.symbol) === -1) {\r\n        total[pos].symbol += `,${config.symbol}` \r\n      } else {\r\n        total.push(config)\r\n      }\r\n      return total;\r\n    },all);\r\n    \r\n    configs = configs.map(mapConfig)\r\n    const slpConfig = getLpContractAddressConfig(env).map(async config => {\r\n      const liqInfo = await getPoolLiquidity(config.chainId,config.pool) || {}\r\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool) || {} \r\n      const pool = config.pool || ''      \r\n      let lpApy;\r\n      let label;\r\n      if(isLP(config.pool)){\r\n        let lapy = await getLpPoolInfoApy(config.chainId,config.pool);\r\n        lpApy = lapy && ((+lapy.apy2) * 100).toFixed(2);           \r\n      }\r\n      if(isSushiLP(config.pool)){\r\n        label = 'SUSHI-APY'\r\n      }\r\n      if(isCakeLP(config.pool)){\r\n        label = 'CAKE-APY'\r\n      }\r\n      return Object.assign(config,{\r\n        network : chainInfo[config.chainId].name,\r\n        liquidity : liqInfo.liquidity,\r\n        apy : ((+apyPool.apy) * 100).toFixed(2),\r\n        formatAdd : formatAddress(pool),\r\n        lpApy : lpApy,\r\n        address : pool,\r\n        type : 'lp',\r\n        label:label,\r\n        buttonText : 'STAKING'\r\n      })    \r\n    })\r\n    const allConfigs = configs.concat(slpConfig)\r\n    Promise.all(allConfigs).then(pools => {\r\n      const airDrop = {\r\n        network : 'BSC',\r\n        bTokenSymbol : 'GIVEAWAY',\r\n        liquidity : '4100',\r\n        symbol : '--',\r\n        airdrop : true,\r\n        chainId : 56,\r\n        buttonText : 'CLAIM'\r\n      }\r\n      // pools.push(airDrop)\r\n      let v1Pools = pools.filter(p => p.version === 'v1' || !p.version)\r\n      let v2Pools = pools.filter(p => p.version === 'v2')\r\n      //新版本按照网络来分组\r\n      if(isNew){\r\n        v1Pools = groupByNetwork(v1Pools);\r\n        v2Pools = groupByNetwork(v2Pools);\r\n      }\r\n      console.log('v2',v2Pools)\r\n      console.log('v1',v1Pools)\r\n      setV2Pools(v2Pools);\r\n      setV1Pools(v1Pools);\r\n      setPools(pools);\r\n      setLoaded(true)\r\n    })\r\n    return () => pools.length = 0\r\n  },[])\r\n  return [loaded,pools,v1Pools,v2Pools];\r\n}","import React from 'react'\r\nimport './pool.less'\r\nimport './zh-pool.less'\r\nimport PoolBox from '../../../components/Pool/PoolBox';\r\nimport useMiningPool from '../../../hooks/useMiningPool';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n\r\nfunction Pool({lang}){\r\n  const [loaded,pools,v1Pools,v2Pools] = useMiningPool(true);\r\n\r\n  return (\r\n    <div className=\"mining-info\">\r\n      <div className=\"pools\">\r\n        {v2Pools.concat(v1Pools).map((pool,index) => <PoolBox group={pool} key={index} lang={lang}/>)}\r\n        {!loaded && <div className=\"loading\">\r\n          <span\r\n            className=\"spinner spinner-border spinner-border-sm\">\r\n            </span>\r\n          </div>}  \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default inject('version')(observer(Pool))"],"sourceRoot":""}