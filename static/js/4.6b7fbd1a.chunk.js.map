{"version":3,"sources":["../node_modules/classnames/index.js","hooks/useLang.js","assets/img/symbol-arrow.svg","hooks/useQuery.js","components/Version/Version.js","components/Account/Account.js","components/hoc/withLanguage.js","components/IndexRoute/IndexRoute.js","components/LanguageSelector/LanguageSelector.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","useLang","dict","page","isMobile","assign","useQuery","URLSearchParams","useLocation","search","inject","observer","wallet","version","isLite","useRouteMatch","isPro","useState","enabled","setEnabled","useEffect","supportAllVersion","hasParam","setCurrent","getParam","supportV1","supportV2","detail","chainId","isShow","window","location","href","className","onClick","switch","current","lang","btnText","setBtnText","isIndex","isRoot","path","exact","isMining","isTeam","notConnectWalletPage","setAccountText","isConnected","supported","formatBalance","symbol","formatAddress","account","a","connect","init","text","withLanguage","Component","WithLanguage","prevProps","this","props","onRouteChanged","intl","item","mobile","React","IndexRoute","url","test","to","show","setShow","refresh","setLocale","addParam","langBoxClass","onMouseOver","onMouseOut","localeLabel","src","arrowIcon","alt","keys","languages","map","index","locale","e"],"mappings":"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","file":"static/js/4.6b7fbd1a.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import {isBrowser,isMobile} from 'react-device-detect'\n\nexport default function useLang(dict,page){\n  if(dict){\n    if(isMobile){\n      return Object.assign(dict[page],dict[page]['mobile'])\n    } \n    return dict[page]\n  }\n  return {}\n}","export default __webpack_public_path__ + \"static/media/symbol-arrow.66dccd14.svg\";","import { useLocation } from \"react-router-dom\";\n\nexport default function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import React , {useState,useEffect}from 'react'\nimport { inject } from 'mobx-react';\nimport { observer } from 'mobx-react-lite';\nimport { useRouteMatch } from 'react-router-dom';\nimport { addParam, hasParam, getParam } from '../../utils/utils';\nimport './version.less'\n\nfunction Version({wallet,version}){\n  const isLite = useRouteMatch('/lite')\n  const isPro = useRouteMatch('/pro')\n  const [enabled, setEnabled] = useState(false)\n\n\n  const switchVersion = () => {\n    version.switch();\n    // const url = addParam('version',version.current);\n    // window.location.href = url;\n  }\n\n\n  useEffect(() => {\n    if(wallet.supportAllVersion){\n      if(hasParam('version')) {\n        version.setCurrent(getParam('version'))\n      } else {\n        version.setCurrent('v2')\n      };\n    } else {\n      if(wallet.supportV1 && !wallet.supportV2){\n        version.setCurrent('v1')\n      } else if(wallet.supportV2 && !wallet.supportV1){\n        version.setCurrent('v2')\n      } else {\n        version.setCurrent('v1')\n      } \n    }\n    return () => {}\n  }, [wallet.detail.chainId])\n\n  //处理是否显示版本切换功能\n  useEffect(() => {\n    let isShow = isLite || isPro\n    if(wallet.detail){\n      isShow = wallet.supportAllVersion && isShow\n    }\n    setEnabled(isShow)\n    return () => {}\n  }, [window.location.href,wallet.detail.chainId])\n\n  return (\n    enabled ? \n      (<div className='version'>\n        <div onClick={switchVersion} className={`version-container ${version.current}`}>\n          <span className='current-v1'>V1</span>\n          <span className='current-v2'>V2</span>\n        </div>\n      </div>)\n    :\n      null\n    )\n}\nexport default inject('wallet','version')(observer(Version))","import React,{useState,useEffect} from 'react';\nimport { formatAddress } from '../../utils/utils';\nimport './account.less'\nimport { observer, inject } from 'mobx-react';\nimport { useRouteMatch } from 'react-router-dom';\n\n\nfunction Account({wallet,lang}){\n  const [btnText,setBtnText] = useState(lang['connect-wallet'])\n  const isIndex = useRouteMatch('/index')\n  const isRoot = useRouteMatch({path: '/',exact : true})\n  const isMining = useRouteMatch({path: '/mining',exact : true});\n  const isTeam = useRouteMatch('/team')\n\n  const notConnectWalletPage  = isIndex || isMining || isTeam || isRoot\n  \n\n\n  const setAccountText = (detail) => {\n    //如果用户选择的网络正确\n    if(wallet.isConnected()){\n      if(detail.supported) {\n        setBtnText(<span>{detail.formatBalance} {detail.symbol} <span className='address'>{formatAddress(detail.account)}</span></span>)\n      } else {\n      setBtnText(<span className='no-supported'>{lang['unsupported-chain-id']}{detail.chainId}!</span>)\n      }\n    } else {\n      setBtnText(lang['connect-wallet'])\n    } \n  }\n\n\n  useEffect(() => {\n    const init = async () => {\n      const detail = await wallet.connect()\n      if(detail){\n        setAccountText(detail)\n      }\n    }\n    // const isApp = isLite || isPro || isMiningDetail\n\n    if(!notConnectWalletPage){\n      init();\n    }\n    return () => {}\n  }, [window.location.href])\n\n  useEffect(() => {\n    setAccountText(wallet.detail)\n    return () => {\n    };\n  }, [wallet.detail.account,wallet.detail.formatBalance,lang]);\n\n\n  return !notConnectWalletPage && (\n    <div className=\"connect\">\n      <div className=\"network-text-logo\">\n        <i className={wallet.detail.symbol}></i>\n        <span className=\"logo-text\">{wallet.detail.text}</span>\n      </div>\n      <div className=\"bg-btn\">\n        <button className=\"nav-btn connect-btn\" onClick={wallet.connect}>\n          {btnText}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default inject('wallet')(observer(Account))","import React from 'react'\nimport { inject, observer } from 'mobx-react';\nimport { isMobile } from 'react-device-detect';\n\nconst withLanguage =  Component => {\n  class WithLanguage extends React.Component {\n\n    componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        this.onRouteChanged(this.props.location);\n      }\n    }\n  \n    onRouteChanged(location) {\n    }\n    \n    render(){\n      const {intl,...props} = this.props\n      const {dict} = intl\n      //如果当前终端为移动端，判断是否存在移动端特殊语言包，如果有覆盖默认的语言包\n      if(isMobile){\n        for(let item in dict){\n          if(dict[item].mobile){\n            Object.assign(dict[item],dict[item].mobile)\n          }\n        }\n      }\n      return (\n      <Component {...props} dict={dict}/>\n      )\n    }\n  }\n  return inject('intl')(observer(WithLanguage)) ;\n}\n\nexport default withLanguage\n","import { Redirect } from \"react-router-dom\";\n\nexport default function IndexRoute(){\n  const url = window.location.href;\n  if(/^https?:\\/\\/(app|alphatest|testnet)/.test(url)) {\n    return  <Redirect to='/lite'/> \n  } else if(/^https?:\\/\\/governance/.test(url)) {\n    return  <Redirect to='/governance'/> \n  } else if(/^https?:\\/\\/bridge/.test(url)) {\n    return  <Redirect to='/bridge'/> \n  } \n  return <Redirect to='/index'/>\n}","import React, { useState ,useEffect} from 'react'\nimport languageIcon from '../../assets/img/language-pick.png'\nimport arrowIcon from '../../assets/img/symbol-arrow.svg'\nimport './langSelector.less'\nimport { inject, observer } from 'mobx-react'\nimport useQuery from '../../hooks/useQuery'\nimport languages from '../../locales/lang.json'\nimport classNames from 'classnames'\nimport { addParam, hasParam, getParam } from '../../utils/utils'\n\nfunction LanguageSelector({intl}){\n  const [show, setShow] = useState(false)\n  const query = useQuery();\n  const onClick = (lang,refresh) => {\n    intl.setLocale(lang)\n    setShow(false);\n    if(refresh){\n      window.location.href = addParam('locale',lang)\n    }\n  }\n\n  const onMouseOver = () => {\n    setShow(true);\n  } \n  const onMouseOut = () => {\n    setShow(false)\n  }\n  const langBoxClass = classNames('lang-box',{show : show})\n  \n\n  useEffect(() => {\n    if(hasParam('locale')){\n      onClick(getParam('locale'))\n    }\n    return () => {}\n  }, [intl])\n  return (\n    <div className='lang-picker' onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\n      {/* <img src={languageIcon} alt='language selector'/>    */}\n      <span className='locale'>{intl.localeLabel}</span>\n      <img src={arrowIcon} alt='selector' />\n      <div className={langBoxClass} >\n        {Object.keys(languages).map((lang,index) => <div key={index} className={lang === intl.locale ? 'lang-item selected' : 'lang-item'} onClick={(e) => onClick(lang,true)}>{languages[lang]}</div>)}\n      </div>\n    </div>\n  )\n}\n\nexport default inject('intl')(observer(LanguageSelector))"],"sourceRoot":""}