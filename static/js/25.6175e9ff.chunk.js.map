{"version":3,"sources":["desktop/pages/Mining/Mining.js"],"names":["chainInfo","config","DeriEnv","get","inject","observer","wallet","lang","useState","currentTab","setCurrentTab","useParams","version","chainId","symbol","baseToken","address","type","query","useQuery","networkText","text","props","has","poolInfoClass","classnames","className","onClick"],"mappings":"iTAaOA,EAAaC,EADRC,UAAQC,OACbH,UAkCQI,sBAAO,SAAPA,CAAiBC,aAhChC,YAA+B,IAAdC,EAAa,EAAbA,OAAOC,EAAM,EAANA,KAAM,EACMC,mBAAS,aADf,mBACtBC,EADsB,KACXC,EADW,OAE4BC,sBAAlDC,EAFsB,EAEtBA,QAAQC,EAFc,EAEdA,QAAQC,EAFM,EAENA,OAAOC,EAFD,EAECA,UAAUC,EAFX,EAEWA,QAAQC,EAFnB,EAEmBA,KAC1CC,EAAQC,cACRC,EAAcpB,EAAUa,IAAYb,EAAUa,GAASQ,KACvDC,EAAQ,CAACV,UAAQC,UAAQC,SAAOC,YAAUC,UAAQV,SAAOW,OAAKV,QACjEW,EAAMK,IAAI,iBACZD,EAAK,YAAkBJ,EAAMf,IAAI,gBAE/Be,EAAMK,IAAI,cACZD,EAAK,SAAeJ,EAAMf,IAAI,aAE/B,IAAMqB,EAAgBC,IAAW,cAAchB,GAC/C,OACG,sBAAKiB,UAAWF,EAAhB,UACD,sBAAKE,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACW,OAATT,GAA+D,OAAZL,EAAnD,UAAmBG,EAAnB,cAAkCK,GAAiB,UAAwDN,EAAxD,YAAkEC,EAAlE,cAAiFK,KAEtI,qBAAKM,UAAU,wBAAf,SACE,qBAAKA,UAAU,mBAAmBC,QAAS,kBAAMjB,EAAc,cAA/D,SACGH,EAAK,2BAIZ,qBAAKmB,UAAU,YAAf,SACE,cAAC,IAAD,eAAqBJ","file":"static/js/25.6175e9ff.chunk.js","sourcesContent":["import {useState} from 'react'\nimport {useParams} from \"react-router-dom\";\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\nimport {DeriEnv} from '../../../lib/web3js/indexV2'\nimport config from '../../../config.json'\nimport './mining.less'\nimport './zh-mining.less'\nimport classnames from \"classnames\";\nimport { inject, observer } from 'mobx-react';\nimport useQuery from '../../../hooks/useQuery'\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nfunction Mining({wallet,lang}){\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\n\tconst {version,chainId,symbol,baseToken,address,type} =  useParams();\n\tconst query = useQuery();\n\tconst networkText = chainInfo[chainId] && chainInfo[chainId].text;\n\tconst props = {version,chainId,symbol,baseToken,address,wallet,type,lang}\n\tif(query.has('baseTokenId')) {\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\n\t}\n\tif(query.has('symbolId')){\n\t\tprops['symbolId'] = query.get('symbolId')\n\t}\n\tconst poolInfoClass = classnames('mining-info',currentTab)\n\treturn(\n    <div className={poolInfoClass}>\n\t\t\t<div className=\"pool-header\">\n\t\t\t\t\t<div className=\"pool-network\">\n\t\t\t\t\t\t{type === 'lp' ? `${baseToken} @ ${networkText}` :  version === 'v2' ? `${baseToken} @ ${networkText}` : `${symbol}/${baseToken} @ ${networkText}` }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"check-trade-liquidity\">\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\n\t\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='pool-info'>\n\t\t\t\t\t<LiquidityMining {...props}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}