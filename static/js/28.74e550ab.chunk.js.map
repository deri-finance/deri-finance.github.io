{"version":3,"sources":["mobile/pages/Mining/Mining.js"],"names":["chainInfo","config","DeriEnv","get","inject","observer","wallet","lang","useState","currentTab","setCurrentTab","useParams","version","chainId","baseToken","address","type","query","useQuery","networkText","text","props","poolInfoClass","classnames","has","className","onClick"],"mappings":"oRAYOA,EAAaC,EADRC,UAAQC,OACbH,UAuCQI,sBAAO,SAAPA,CAAiBC,aArChC,YAA+B,IAAdC,EAAa,EAAbA,OAAOC,EAAM,EAANA,KAAM,EACMC,mBAAS,aADf,mBACtBC,EADsB,KACXC,EADW,OAEqBC,sBAA3CC,EAFsB,EAEtBA,QAAQC,EAFc,EAEdA,QAAQC,EAFM,EAENA,UAAUC,EAFJ,EAEIA,QAAQC,EAFZ,EAEYA,KACnCC,EAAQC,cACRC,EAAcnB,EAAUa,GAASO,KACjCC,EAAQ,CAACT,UAAQC,UAAQC,YAAUC,UAAQT,SAAOU,OAAKT,QACvDe,EAAgBC,IAAW,cAAcd,GAQ/C,OAPGQ,EAAMO,IAAI,iBACZH,EAAK,YAAkBJ,EAAMd,IAAI,gBAE/Bc,EAAMO,IAAI,cACZH,EAAK,SAAeJ,EAAMd,IAAI,aAI5B,sBAAKsB,UAAWH,EAAhB,UACD,sBAAKG,UAAU,cAAf,UACE,sBAAKA,UAAU,eAAf,UACGX,EADH,MACiBK,KAEjB,sBAAKM,UAAU,wBAAf,UACE,qBAAKA,UAAU,mBAAmBC,QAAS,kBAAMhB,EAAc,cAA/D,SACEH,EAAK,sBAEP,qBAAKkB,UAAU,eAAeC,QAAS,kBAAMhB,EAAc,UAA3D,SACEH,EAAK,0BAIX,sBAAKkB,UAAU,YAAf,UACE,cAAC,IAAD,eAAqBJ,IACrB,cAAC,IAAD,eAAiBA","file":"static/js/28.74e550ab.chunk.js","sourcesContent":["import {useState} from 'react'\nimport {useParams} from \"react-router-dom\";\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\nimport {DeriEnv} from '../../../lib/web3js/indexV2'\nimport config from '../../../config.json'\nimport './mining.less'\nimport classnames from \"classnames\";\nimport { inject, observer } from 'mobx-react';\nimport useQuery from '../../../hooks/useQuery'\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nfunction Mining({wallet,lang}){\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\n\tconst {version,chainId,baseToken,address,type} =  useParams();\n\tconst query = useQuery();\n\tconst networkText = chainInfo[chainId].text;\n\tconst props = {version,chainId,baseToken,address,wallet,type,lang}\n\tconst poolInfoClass = classnames('mining-info',currentTab)\n\tif(query.has('baseTokenId')) {\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\n\t}\n\tif(query.has('symbolId')){\n\t\tprops['symbolId'] = query.get('symbolId')\n\t}\n\t\n\treturn(\n    <div className={poolInfoClass}>\n\t\t\t<div className=\"pool-header\">\n\t\t\t\t\t<div className=\"pool-network\">\n\t\t\t\t\t\t\t{baseToken} @ {networkText}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"check-trade-liquidity\">\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\n\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='trade-mining' onClick={() => setCurrentTab('trade')} >\n\t\t\t\t\t\t\t\t{lang['trading-mining']}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='pool-info'>\n\t\t\t\t\t<LiquidityMining {...props}/>\n\t\t\t\t\t<TradeMining {...props}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}